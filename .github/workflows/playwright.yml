name: Playwright E2E & API Tests

on:
  push:
  workflow_dispatch:

jobs:
  lint:
    name: Lint (ESLint)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org/'
      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PLAYWRIGHT_TOKEN }}" > ~/.npmrc
      - name: Clear node_modules and package-lock.json if exist
        run: |
          rm -rf node_modules package-lock.json || true
      - name: Install dependencies
        run: npm install
      - name: Run ESLint
        run: npx eslint . --ext .ts --max-warnings=0 --config eslint.config.mjs

  ui-tests:
    name: UI Tests (${{ matrix.browser }})
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        browser: [chromium, firefox]
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org/'
      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PLAYWRIGHT_TOKEN }}" > ~/.npmrc
      - name: Clear node_modules and package-lock.json if exist
        run: |
          rm -rf node_modules package-lock.json || true
      - name: Install dependencies
        run: npm install
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libnss3 libatk-bridge2.0-0 libgtk-3-0
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps ${{ matrix.browser }}
      - name: Run UI Tests
        run: >
          PLAYWRIGHT_BROWSERS_PATH=0 BROWSER=${{ matrix.browser }} npx cucumber-js tests/features/**/*.feature
          --require-module ts-node/register
          --require tests/steps/Registration.steps.ts
          --require tests/steps/Login.steps.ts
          --require tests/steps/ParallelUsers.steps.ts
          --require tests/support/*.ts
          --tags "not @api"
          --format html:reports/ui-${{ matrix.browser }}-report.html
      - name: Upload UI HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: ui-report-${{ matrix.browser }}
          path: reports/ui-${{ matrix.browser }}-report.html

  api-tests:
    name: API Tests
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          registry-url: 'https://registry.npmjs.org/'
      - name: Authenticate NPM
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_PLAYWRIGHT_TOKEN }}" > ~/.npmrc
      - name: Clear node_modules and package-lock.json if exist
        run: |
          rm -rf node_modules package-lock.json || true
      - name: Install dependencies
        run: npm install
      - name: Run API Tests
        run: >
          npx cucumber-js tests/features/**/*.feature 
          --require-module ts-node/register 
          --require tests/steps/Api.steps.ts 
          --require tests/support/*.ts 
          --tags "@api" 
          --format html:reports/api-report.html
      - name: Upload API HTML Report
        uses: actions/upload-artifact@v4
        with:
          name: api-report
          path: reports/api-report.html
